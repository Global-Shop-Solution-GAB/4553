<?xml version="1.0" encoding="utf-8"?>
<SyntaxEdit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Pages>
    <DefaultPage>
      <Header />
      <Footer />
    </DefaultPage>
  </Pages>
  <DisplayStrings />
  <Selection>
    <SelectionRect>
      <Location>
        <X>0</X>
        <Y>303</Y>
      </Location>
      <Size>
        <Width>24</Width>
        <Height>2</Height>
      </Size>
      <X>0</X>
      <Y>303</Y>
      <Width>24</Width>
      <Height>2</Height>
    </SelectionRect>
    <Options>UseColors OverwriteBlocks SelectLineOnTripleClick CopyLineWhenEmpty SelectWordOnCtrlClick</Options>
  </Selection>
  <Gutter>
    <Options>PaintLineNumbers PaintBookMarks PaintLineModificators</Options>
  </Gutter>
  <Margin>
    <Visible>false</Visible>
  </Margin>
  <LineStyles />
  <LineSeparator />
  <Printing>
    <Footer />
    <Header />
  </Printing>
  <WhiteSpace />
  <TextSource>
    <Position>
      <X>0</X>
      <Y>303</Y>
    </Position>
    <Lexer>
      <Scheme>
        <Author>Quantum Whale, LLC.</Author>
        <Copyright>Copyright (c) 2004 - 2014 Quantum Whale LLC.</Copyright>
        <FileType>gas</FileType>
        <Version>1.5</Version>
        <Styles>
          <Style>
            <Name>idents</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>numbers</Name>
            <ForeColor>ControlText</ForeColor>
          </Style>
          <Style>
            <Name>reswords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>comments</Name>
            <ForeColor>Green</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>xmlcomments</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>symbols</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>whitespace</Name>
            <ForeColor>WindowText</ForeColor>
          </Style>
          <Style>
            <Name>strings</Name>
            <ForeColor>Maroon</ForeColor>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>directives</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>htmlparams</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>syntax errors</Name>
            <ForeColor>Red</ForeColor>
          </Style>
          <Style>
            <Name>codes nippets</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>255:180:228:180</BackColor>
          </Style>
          <Style>
            <Name>GabReservedWords</Name>
            <ForeColor>Blue</ForeColor>
          </Style>
          <Style>
            <Name>GabTokenWithBrackets</Name>
            <ForeColor>Gray</ForeColor>
          </Style>
          <Style>
            <Name>GabFunctionIntrinsicDebug</Name>
            <ForeColor>White</ForeColor>
            <BackColor>Red</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
          <Style>
            <Name>GabVariable</Name>
            <ForeColor>Teal</ForeColor>
          </Style>
          <Style>
            <Name>GabVariableSystemDefined</Name>
            <ForeColor>Teal</ForeColor>
            <FontStyle>Bold Italic</FontStyle>
          </Style>
          <Style>
            <Name>GabGui</Name>
            <ForeColor>OrangeRed</ForeColor>
          </Style>
          <Style>
            <Name>GabProgramSubStartEnd</Name>
            <ForeColor>Black</ForeColor>
            <BackColor>LightGray</BackColor>
            <FontStyle>Bold</FontStyle>
            <PlainText>true</PlainText>
          </Style>
        </Styles>
      </Scheme>
    </Lexer>
    <TextStrings>
      <Lines>
        <string>Program.Sub.ScreenSU.Start</string>
        <string>Gui.EmailForm..Create</string>
        <string>Gui.EmailForm..Size(7440,10545)</string>
        <string>Gui.EmailForm..MinX(0)</string>
        <string>Gui.EmailForm..MinY(0)</string>
        <string>Gui.EmailForm..Position(0,0)</string>
        <string>Gui.EmailForm..BackColor(-2147483633)</string>
        <string>Gui.EmailForm..MousePointer(0)</string>
        <string>Gui.EmailForm..Event(UnLoad,Form_UnLoad)</string>
        <string>Gui.EmailForm..Caption("Employee Email")</string>
        <string>Gui.EmailForm.GsGridControlEmail.Create(GsGridControl)</string>
        <string>Gui.EmailForm.GsGridControlEmail.Size(6990,9225)</string>
        <string>Gui.EmailForm.GsGridControlEmail.Position(105,225)</string>
        <string>Gui.EmailForm.GsGridControlEmail.Event(CellValueChanged,GsGridControlEmail_CellValueChanged)</string>
        <string>Gui.EmailForm.cmdSaveEmail.Create(Button)</string>
        <string>Gui.EmailForm.cmdSaveEmail.Size(855,375)</string>
        <string>Gui.EmailForm.cmdSaveEmail.Position(105,9570)</string>
        <string>Gui.EmailForm.cmdSaveEmail.Caption("Save")</string>
        <string>Gui.EmailForm.cmdSaveEmail.Event(Click,cmdSaveEmail_Click)</string>
        <string>Program.Sub.ScreenSU.End</string>
        <string />
        <string>Program.Sub.Preflight.Start</string>
        <string>Program.Sub.Preflight.End</string>
        <string />
        <string>Program.Sub.Main.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Main_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string />
        <string>F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Caller.Hook,=,"36820")</string>
        <string>	F.Intrinsic.Control.CallSub(build_datatable)</string>
        <string>	F.Intrinsic.Control.CallSub(send_email)	</string>
        <string>	F.Intrinsic.Control.CallSub(exit)</string>
        <string>	</string>
        <string>F.Intrinsic.Control.Else</string>
        <string>	'shows screen to allow emails to be entered for each active employee.</string>
        <string>	V.Local.sSql.Set("Select Employee, Email From GCG_4553_PYRL_Email")</string>
        <string>	F.Data.DataTable.CreateFromSQL("Email","con",V.Local.sSql,True)</string>
        <string>	</string>
        <string>	V.Local.sSql.Set("Select Employee, NAME From V_Employee_Mstr Where date_termination = '1900-01-01'")</string>
        <string>	F.Data.DataTable.CreateFromSQL("Employee","con",V.Local.sSql,True)</string>
        <string>	</string>
        <string>	F.Data.Linq.Join("LeftJoin","DataTable","EMPLOYEE*!*A","DataTable","EMAIL*!*B","A.EMPLOYEE = B.EMPLOYEE","A.EMPLOYEE*!*A.NAME*!*B.EMAIL"," ","A.EMPLOYEE","A.EMPLOYEE","EmployeeEmail",True)</string>
        <string>	</string>
        <string>	gui.EmailForm.GsGridControlEmail.AddGridviewFromDatatable("Email","EmployeeEmail")</string>
        <string>	gui.EmailForm.GsGridControlEmail.SetColumnProperty("Email","Employee","ReadOnly",True)</string>
        <string>	gui.EmailForm.GsGridControlEmail.SetColumnProperty("Email","Employee","AllowEdit",False)</string>
        <string>	gui.EmailForm.GsGridControlEmail.SetColumnProperty("Email","Email","ReadOnly",False)</string>
        <string>	gui.EmailForm.GsGridControlEmail.SetColumnProperty("Email","Email","AllowEdit",True)</string>
        <string>	gui.EmailForm.GsGridControlEmail.SetColumnProperty("Email","Employee","Width","30")</string>
        <string>	gui.EmailForm.GsGridControlEmail.SetColumnProperty("Email","Name","Width","60")</string>
        <string>	</string>
        <string>	'setting anchors on the screen for resizing</string>
        <string>	Gui.EmailForm.GsGridControlEmail.Anchor(15)</string>
        <string>	Gui.EmailForm.cmdSaveEmail.Anchor(6)</string>
        <string>	</string>
        <string>	gui.EmailForm.cmdSaveEmail.Enabled(True)</string>
        <string>	</string>
        <string>	gui.EmailForm..Show</string>
        <string>	</string>
        <string>	gui.EmailForm.GsGridControlEmail.MainView("Email")</string>
        <string>	</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Main_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4553_Email_Pay_Check.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(exit)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Main.End</string>
        <string />
        <string>Program.Sub.Exit.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Exit_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.ODBC.Connection!con.Close</string>
        <string>F.Intrinsic.Control.End</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Exit_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4553_Email_Pay_Check.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.End</string>
        <string />
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Exit.End</string>
        <string />
        <string>Program.Sub.Build_DataTable.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Build_DataTable_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.sSql.Declare(String)</string>
        <string />
        <string>'getting records from the bi table</string>
        <string>'F.Intrinsic.String.Build("Select Distinct Employee,Check_Date,RPTID From V_BI_PAYROLL_CHKS Where Check_Date &lt;&gt; '1900-01-01' And TRMNL = '{0}' And RPTID = '{1}'",V.Caller.Terminal,"009026",V.Local.sSql)</string>
        <string>F.Intrinsic.String.Build("Select Distinct Employee,Check_Date,RPTID From V_BI_PAYROLL_CHKS Where Check_Date &lt;&gt; '1900-01-01' And TRMNL = '{0}'",V.Caller.Terminal,V.Local.sSql)</string>
        <string>F.Data.DataTable.CreateFromSQL("Pay","con",V.Local.sSql,True)</string>
        <string />
        <string>'getting email for employee's</string>
        <string>V.Local.sSql.Set("Select Employee, Email from GCG_4553_PYRL_Email")</string>
        <string>F.Data.DataTable.CreateFromSQL("Emp","con",V.Local.sSql,True)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.DataTable.Pay.RowCount--,&lt;&gt;,-1,"AND",V.DataTable.Emp.RowCount--,&lt;&gt;,-1)</string>
        <string>	'joining both datatables</string>
        <string>	F.Data.Linq.Join("Leftjoin","DataTable","PAY*!*A","DataTable","Emp*!*B","A.Employee = B.Employee","A.Employee*!*A.Check_Date*!*A.RPTID*!*B.Email"," ","A.EMPLOYEE","A.EMPLOYEE","EmpEmail",True)</string>
        <string>	</string>
        <string>	F.Intrinsic.Control.If(V.DataTable.EmpEmail.Exists,=,True)</string>
        <string>		'getting employee name from employee number</string>
        <string>		V.Local.sSql.Set("Select Employee, Name From V_Employee_Mstr")</string>
        <string>		F.Data.DataTable.CreateFromSQL("Name","con",V.Local.sSql,True)</string>
        <string>		F.Intrinsic.Control.If(V.DataTable.Name.RowCount--,&lt;&gt;,-1)</string>
        <string>			'joining this table to the other two tales that have already been joined</string>
        <string>			'this table will be used when emailing employees the paystub</string>
        <string>			F.Data.Linq.Join("Leftjoin","DataTable","EmpEmail*!*A","DataTable","Name*!*B","A.Employee = B.Employee","A.Employee*!*A.Check_Date*!*A.RPTID*!*A.Email*!*B.Name"," ","A.EMPLOYEE","A.EMPLOYEE","EmpNameEmail",True)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Build_DataTable_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4553_Email_Pay_Check.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(exit)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Build_DataTable.End</string>
        <string />
        <string>Program.Sub.Send_Email.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Send_Email_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string>V.Local.i.Declare(Long)</string>
        <string>V.Local.iBiRunID.Declare(Long)</string>
        <string>V.Local.iRptID.Declare(Long)</string>
        <string>V.Local.iLogID.Declare(Long)</string>
        <string>V.Local.sDir.Declare(String)</string>
        <string>V.Local.bRet.Declare(Boolean)</string>
        <string>V.Local.sParams.Declare(String)</string>
        <string>V.Local.sRetFile.Declare(String)</string>
        <string>V.Local.sBody.Declare(String)</string>
        <string>V.Local.sFqn.Declare(String)</string>
        <string>V.Local.sMess.Declare(String)</string>
        <string>V.Local.iCount.Declare(Long)</string>
        <string>V.Local.sFile.Declare(String)</string>
        <string>V.Local.sVal.Declare(String)</string>
        <string>V.Local.bFile.Declare(Boolean)</string>
        <string>V.Local.iID.Declare(Long)</string>
        <string>V.Local.sTemp.Declare(String)</string>
        <string>V.Local.sUserEmail.Declare(String)</string>
        <string />
        <string>F.Intrinsic.String.Build("Attached is your Cox Machine direct deposit pay stub.",V.Ambient.NewLine,V.Local.sBody)</string>
        <string>F.Intrinsic.String.Build("{0}\Paystubs",V.Caller.PluginsDir,V.Local.sDir)</string>
        <string>F.Intrinsic.File.DirExists(V.Local.sDir,V.Local.bRet)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.Local.bRet,=,False)</string>
        <string>	F.Intrinsic.File.CreateDir(V.Local.sDir)</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string />
        <string>'required report params</string>
        <string>V.Local.sParams.Set("TERMINAL*!*Rptid*!*Employee")</string>
        <string>F.Intrinsic.String.Build("{0}\PAYSTUB_{1}",V.System.Temp,V.Caller.Terminal,V.Local.sRetFile)</string>
        <string />
        <string>F.Intrinsic.Control.If(V.DataTable.EmpNameEmail.Exists,=,True)</string>
        <string>	F.Intrinsic.UI.InvokeWaitDialog("Paystub Email Processing...","Email Paystub Program")</string>
        <string>	</string>
        <string>	F.Intrinsic.Control.For(V.Local.i,0,V.DataTable.EmpNameEmail.RowCount--,1)</string>
        <string>		F.Intrinsic.Math.Add(V.Local.i,1,V.Local.iCount)</string>
        <string>		F.Intrinsic.String.Build("Emailing paystub for Employee : {0} {1} Name: {2}{1}{1}{1} {3} of {4}",V.DataTable.EmpNameEmail(V.Local.i).Employee!FieldValTrim,V.Ambient.Tab,V.DataTable.EmpNameEmail(V.Local.i).Name!FieldValTrim,V.Local.iCount,V.DataTable.EmpNameEmail.RowCount,V.Local.sMess)</string>
        <string>		F.Intrinsic.UI.ChangeWaitStatus(V.Local.sMess,V.Local.i,0,V.DataTable.EmpNameEmail.RowCount--)</string>
        <string>	</string>
        <string>		F.Intrinsic.String.Build("{0}*!*{1}*!*{2}",V.Caller.Terminal,V.DataTable.EmpNameEmail(V.Local.i).RptID!FieldValTrim,V.DataTable.EmpNameEmail(V.Local.i).Employee!FieldValTrim,V.Local.sVal)</string>
        <string>		F.Intrinsic.String.Build("{0}_{1}.pdf",V.DataTable.EmpNameEmail(V.Local.i).Employee!FieldValTrim,V.DataTable.EmpNameEmail(V.Local.i).Check_Date!FieldValTrim,V.Local.sFile)</string>
        <string>		F.Intrinsic.File.MakeFilenameFriendly(v.Local.sFile,v.Local.sFile)</string>
        <string>		'make it file name friendly</string>
        <string>		F.Intrinsic.String.Build("{0}\{1}",V.Local.sDir,V.Local.sFile,V.Local.sFqn)</string>
        <string>	</string>
        <string>		'Getting Rund ID and Long ID</string>
        <string>		F.Global.BI.GetRunID(V.Local.iBIRUNID)</string>
        <string>		F.Global.BI.GetIDFromName("GCG_4553_PY_LongChk.rpt",V.Local.iRptID)</string>
        <string>		F.Global.BI.StartLogging(V.Local.iBIRUNID,V.Local.iRptID,-1,"GCG_4353_PY_LongChk.rpt",V.Local.iLogID)</string>
        <string>	</string>
        <string>		F.Global.BI.RunReportPreProcessor(V.Local.iBIRUNID,V.Local.iLOGID,V.Local.sParams,V.Local.sVal,"",4,True,"",-1,"",0,V.Local.sFQN,"",V.Local.sParams,V.Local.sRetFile,V.Local.iLOGID)</string>
        <string />
        <string>		F.Global.BI.StopLogging(V.Local.iLOGID)</string>
        <string>		</string>
        <string>		F.Intrinsic.File.Exists(V.Local.sFQN,V.Local.bFile)</string>
        <string>		F.Intrinsic.Control.If(V.Local.bFile,=,False)</string>
        <string>			F.Intrinsic.UI.Msgbox("PDF was not created.Please contact Global Shop.")</string>
        <string>			F.Intrinsic.Control.CallSub(exit)</string>
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	</string>
        <string>		F.Intrinsic.File.Exists(V.Local.sFQN,V.Local.bRet)</string>
        <string>		F.Intrinsic.Control.If(V.Local.bRet,=,True)</string>
        <string>			F.Intrinsic.String.Build("Paycheck Stub {0}",V.DataTable.EmpNameEmail(V.Local.i).Check_Date!FieldValTrim,V.Local.sTemp)</string>
        <string>			F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sFile,V.Local.sDir,V.Local.sFile)</string>
        <string>			F.Global.Security.getuserID(V.Caller.User,V.Caller.CompanyCode,V.Local.iID)</string>
        <string>			F.Global.Security.GetUserEmail(V.Caller.User,V.Caller.CompanyCode,V.Local.sUserEmail)</string>
        <string />
        <string>			Function.Global.Messaging.QueueMessage(V.Caller.CompanyCode,V.local.iID,"",V.Local.sTemp,V.Local.sUserEmail,V.DataTable.EmpNameEmail(V.Local.i).Email!FieldValTrim,v.Local.sBody,5,,False,,,,,,,,V.Local.sFile,True)</string>
        <string />
        <string>		F.Intrinsic.Control.EndIf</string>
        <string>	</string>
        <string>	F.Intrinsic.Control.Next(V.Local.i)</string>
        <string>	</string>
        <string>	F.Intrinsic.UI.CloseWaitDialog</string>
        <string>	</string>
        <string>F.Intrinsic.Control.EndIf</string>
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Send_Email_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4553_Email_Pay_Check.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(exit)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Send_Email.End</string>
        <string />
        <string>Program.Sub.Form_UnLoad.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("Form_UnLoad_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>gui.EmailForm..Visible(False)</string>
        <string />
        <string>F.Intrinsic.Control.CallSub(exit)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("Form_UnLoad_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4553_Email_Pay_Check.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(exit)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.Form_UnLoad.End</string>
        <string />
        <string>Program.Sub.cmdSaveEmail_Click.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("cmdSaveEmail_Click_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>F.Data.DataTable.SaveToDB("EmployeeEmail","con","GCG_4553_PYRL_Email","Employee",256,"Employee@!@Employee*!*Email@!@Email")</string>
        <string />
        <string>gui.EmailForm.cmdSaveEmail.Enabled(False)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("cmdSaveEmail_Click_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4553_Email_Pay_Check.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(exit)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.cmdSaveEmail_Click.End</string>
        <string />
        <string>Program.Sub.GsGridControlEmail_CellValueChanged.Start</string>
        <string>F.Intrinsic.Control.SetErrorHandler("GsGridControlEmail_CellValueChanged_Err")</string>
        <string>F.Intrinsic.Control.ClearErrors</string>
        <string />
        <string>V.Local.sError.Declare(String)</string>
        <string />
        <string>gui.EmailForm.cmdSaveEmail.Enabled(True)</string>
        <string />
        <string>F.Intrinsic.Control.ExitSub</string>
        <string />
        <string>F.Intrinsic.Control.Label("GsGridControlEmail_CellValueChanged_Err")</string>
        <string>F.Intrinsic.Control.If(V.Ambient.ErrorNumber,&lt;&gt;,0)</string>
        <string>	Function.Intrinsic.String.Concat("Project: GCG_4553_Email_Pay_Check.g2u",V.Ambient.Newline,V.Ambient.Newline,"Subroutine: ",V.Ambient.CurrentSubroutine,V.Ambient.NewLine,"Error Occurred ",V.Ambient.ErrorNumber," with description ",V.Ambient.ErrorDescription,V.Local.sError)</string>
        <string>	F.Intrinsic.UI.Msgbox(V.Local.sError)</string>
        <string>	F.Intrinsic.Control.CallSub(exit)</string>
        <string>Function.Intrinsic.Control.EndIf</string>
        <string />
        <string />
        <string>Program.Sub.GsGridControlEmail_CellValueChanged.End</string>
        <string />
        <string>Program.Sub.Comments.Start</string>
        <string>${$0$}$$}$RLK$}$6/14/2017 10:11:20 AM$}$True</string>
        <string>Program.Sub.Comments.End</string>
      </Lines>
    </TextStrings>
  </TextSource>
  <Scrolling>
    <WindowOriginY>230</WindowOriginY>
  </Scrolling>
  <Outlining>
    <AllowOutlining>true</AllowOutlining>
    <ImageSize>8</ImageSize>
    <Ranges>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>0</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>19</Y>
        </EndPoint>
        <Text>Program.Sub.ScreenSU</Text>
        <DisplayText>Program.Sub.ScreenSU</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>21</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>22</Y>
        </EndPoint>
        <Text>Program.Sub.Preflight</Text>
        <DisplayText>Program.Sub.Preflight</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>24</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>78</Y>
        </EndPoint>
        <Text>Program.Sub.Main</Text>
        <DisplayText>Program.Sub.Main</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>80</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>100</Y>
        </EndPoint>
        <Text>Program.Sub.Exit</Text>
        <DisplayText>Program.Sub.Exit</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>102</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>144</Y>
        </EndPoint>
        <Text>Program.Sub.Build_DataTable</Text>
        <DisplayText>Program.Sub.Build_DataTable</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>146</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>237</Y>
        </EndPoint>
        <Text>Program.Sub.Send_Email</Text>
        <DisplayText>Program.Sub.Send_Email</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>239</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>259</Y>
        </EndPoint>
        <Text>Program.Sub.Form_UnLoad</Text>
        <DisplayText>Program.Sub.Form_UnLoad</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>261</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>281</Y>
        </EndPoint>
        <Text>Program.Sub.cmdSaveEmail_Click</Text>
        <DisplayText>Program.Sub.cmdSaveEmail_Click</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>283</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>301</Y>
        </EndPoint>
        <Text>Program.Sub.GsGridControlEmail_CellValueChanged</Text>
        <DisplayText>Program.Sub.GsGridControlEmail_CellValueChanged</DisplayText>
        <Visible>true</Visible>
        <Level>0</Level>
      </Range>
      <Range>
        <StartPoint>
          <X>0</X>
          <Y>303</Y>
        </StartPoint>
        <EndPoint>
          <X>2147483647</X>
          <Y>305</Y>
        </EndPoint>
        <Text>Program.Sub.Comments</Text>
        <DisplayText>Program.Sub.Comments</DisplayText>
        <Visible>false</Visible>
        <Level>0</Level>
      </Range>
    </Ranges>
  </Outlining>
  <HyperText />
  <Spelling />
  <Braces />
</SyntaxEdit>